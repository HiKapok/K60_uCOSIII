###############################################################################
#                                                                             #
#                                                       03/Nov/2015  20:45:50 #
# IAR ANSI C/C++ Compiler V6.30.6.23336/W32 EVALUATION for ARM                #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\WangChangan\Desktop\K10小板定稿\HardwareInterfa #
#                    ce\Interrupt.c                                           #
#    Command line =  C:\Users\WangChangan\Desktop\K10小板定稿\HardwareInterfa #
#                    ce\Interrupt.c -D COMPILER_IAR -lCN                      #
#                    "C:\Users\WangChangan\Desktop\K10小板定稿\IAR            #
#                    Files\FLASH\List\" -lB "C:\Users\WangChangan\Desktop\K10 #
#                    小板定稿\IAR Files\FLASH\List\" -o                       #
#                    "C:\Users\WangChangan\Desktop\K10小板定稿\IAR            #
#                    Files\FLASH\Obj\" --no_cse --no_unroll --no_inline       #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "C:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.0                           #
#                    Evaluation\arm\INC\c\DLib_Config_Normal.h" -I            #
#                    "C:\Users\WangChangan\Desktop\K10小板定稿\IAR            #
#                    Files\..\Project_Headers\" -I                            #
#                    "C:\Users\WangChangan\Desktop\K10小板定稿\IAR            #
#                    Files\..\KinetisDrivers\" -I                             #
#                    "C:\Users\WangChangan\Desktop\K10小板定稿\IAR            #
#                    Files\..\ExtraFunction\" -I                              #
#                    "C:\Users\WangChangan\Desktop\K10小板定稿\IAR            #
#                    Files\..\Hardware_Interface\" -I                         #
#                    "C:\Users\WangChangan\Desktop\K10小板定稿\IAR            #
#                    Files\..\Make_Decision\" -I                              #
#                    "C:\Users\WangChangan\Desktop\K10小板定稿\IAR            #
#                    Files\..\Math\" -I "C:\Users\WangChangan\Desktop\K10小板 #
#                    定稿\IAR Files\..\Original_Process\" -I                  #
#                    "C:\Users\WangChangan\Desktop\K10小板定稿\IAR            #
#                    Files\..\Platform\" -I "C:\Users\WangChangan\Desktop\K10 #
#                    小板定稿\IAR Files\..\SD_System\" -I                     #
#                    "C:\Users\WangChangan\Desktop\K10小板定稿\IAR            #
#                    Files\..\Source\" -I "C:\Users\WangChangan\Desktop\K10小 #
#                    板定稿\IAR Files\..\System_Init\" -Ol                    #
#    List file    =  C:\Users\WangChangan\Desktop\K10小板定稿\IAR             #
#                    Files\FLASH\List\Interrupt.lst                           #
#    Object file  =  C:\Users\WangChangan\Desktop\K10小板定稿\IAR             #
#                    Files\FLASH\Obj\Interrupt.o                              #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\WangChangan\Desktop\K10小板定稿\HardwareInterface\Interrupt.c
      1          #include "./Interrupt.h"
      2          #include "../Platform/Platform.h"
      3          #include "../ZLG7290/ZLG7290.h"
      4          #include "../KinetisDrivers/KinetisConfig.h"
      5          #include "../HardwareInterface/HardwareOperation.h"
      6          #include "../ExtraFunction/ExtraFunction.h"
      7          #include "../LEDCtl/LEDCtl_Ext.h"
      8          

   \                                 In section .bss, align 2
      9          volatile INT16U SysTick = 0;   /*系统时间基准(其单位在Platform.h中配置)*/
   \                     SysTick:
   \   00000000                      DS8 2
     10          /****************************************中断服务程序********************************************/
     11          /************************************************************************************************ 
     12          * ISR_System_Tick
     13          * 系统时钟中断的中断服务程序
     14            提供系统时间基准
     15            并运行用户指定的函数
     16          ************************************************************************************************/

   \                                 In section .text, align 4, keep-with-next
     17          ISR_System_Tick()     
     18          {    
   \                     PTI0_ISR:
   \   00000000   0xB580             PUSH     {R7,LR}
     19            CLR_TickInt();                      /*清中断标志*/  
   \   00000002   0x....             LDR.N    R0,??DataTable3  ;; 0x4003710c
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x6001             STR      R1,[R0, #+0]
     20            DIS_Int(); 
   \   00000008   0xB672             CPSID i         
     21          #if EN_Buzzer != 0
     22            Process_BuzzerCtrl();
   \   0000000A   0x.... 0x....      BL       Process_BuzzerCtrl
     23          #endif
     24          #if EN_LED != 0
     25            LED_CtlProc();
   \   0000000E   0x.... 0x....      BL       LED_CtlProc
     26          #endif
     27            SysTick++;                          /*系统时间基准加1*/  
   \   00000012   0x....             LDR.N    R0,??DataTable3_1
   \   00000014   0x8800             LDRH     R0,[R0, #+0]
   \   00000016   0x1C40             ADDS     R0,R0,#+1
   \   00000018   0x....             LDR.N    R1,??DataTable3_1
   \   0000001A   0x8008             STRH     R0,[R1, #+0]
     28            
     29            EN_Int();
   \   0000001C   0xB662             CPSIE i         
     30          }
   \   0000001E   0xBD01             POP      {R0,PC}          ;; return
     31          /************************************************************************************************ 
     32          * ISR_KeyPad
     33          * 键盘中断的中断服务程序
     34            设置相关标志位
     35          ************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     36          ISR_KeyPad(){
     37          #if EN_KeyPad != 0
     38            if(IF_KeyInt()){
   \                     PTB19_ISR:
   \   00000000   0x....             LDR.N    R0,??DataTable3_2  ;; 0x4004a0a0
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x0300             LSLS     R0,R0,#+12
   \   00000006   0xD508             BPL.N    ??PTB19_ISR_0
     39              DIS_KeyInt(); 
   \   00000008   0x....             LDR.N    R0,??DataTable3_3  ;; 0x4004a04c
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0xF430 0x2070      BICS     R0,R0,#0xF0000
   \   00000010   0x....             LDR.N    R1,??DataTable3_3  ;; 0x4004a04c
   \   00000012   0x6008             STR      R0,[R1, #+0]
     40              Key_Valid=1;   
   \   00000014   0x....             LDR.N    R0,??DataTable3_4
   \   00000016   0x2101             MOVS     R1,#+1
   \   00000018   0x7001             STRB     R1,[R0, #+0]
     41            }
     42          #endif
     43            CLR_KeyInt();
   \                     ??PTB19_ISR_0:
   \   0000001A   0x....             LDR.N    R0,??DataTable3_2  ;; 0x4004a0a0
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF450 0x2000      ORRS     R0,R0,#0x80000
   \   00000022   0x....             LDR.N    R1,??DataTable3_2  ;; 0x4004a0a0
   \   00000024   0x6008             STR      R0,[R1, #+0]
     44          }
   \   00000026   0x4770             BX       LR               ;; return
     45          

   \                                 In section .text, align 2, keep-with-next
     46          ISR_Key(){
   \                     Key_ISR:
   \   00000000   0xB580             PUSH     {R7,LR}
     47          #if EN_KeyPad != 0
     48            ExtKeyValue = GetExtKey();
   \   00000002   0x....             LDR.N    R0,??DataTable3_5  ;; 0x4004d0a0
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x0DC0             LSRS     R0,R0,#+23
   \   00000008   0xF010 0x0002      ANDS     R0,R0,#0x2
   \   0000000C   0x....             LDR.N    R1,??DataTable3_5  ;; 0x4004d0a0
   \   0000000E   0x6809             LDR      R1,[R1, #+0]
   \   00000010   0x0C09             LSRS     R1,R1,#+16
   \   00000012   0xF011 0x0101      ANDS     R1,R1,#0x1
   \   00000016   0x4308             ORRS     R0,R1,R0
   \   00000018   0x....             LDR.N    R1,??DataTable3_6
   \   0000001A   0x8008             STRH     R0,[R1, #+0]
     49            DIS_ExtKeyInt();
   \   0000001C   0x....             LDR.N    R0,??DataTable3_7  ;; 0x4004d040
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0xF430 0x2070      BICS     R0,R0,#0xF0000
   \   00000024   0x....             LDR.N    R1,??DataTable3_7  ;; 0x4004d040
   \   00000026   0x6008             STR      R0,[R1, #+0]
   \   00000028   0x....             LDR.N    R0,??DataTable3_7  ;; 0x4004d040
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   \   0000002C   0xF430 0x2070      BICS     R0,R0,#0xF0000
   \   00000030   0x....             LDR.N    R1,??DataTable3_7  ;; 0x4004d040
   \   00000032   0x6008             STR      R0,[R1, #+0]
     50            ptrExtKeyProc(&ExtKeyValue);
   \   00000034   0x....             LDR.N    R0,??DataTable3_6
   \   00000036   0x....             LDR.N    R1,??DataTable3_8
   \   00000038   0x6809             LDR      R1,[R1, #+0]
   \   0000003A   0x4788             BLX      R1
     51          #endif
     52            CLR_ExtKeyInt();
   \   0000003C   0x....             LDR.N    R0,??DataTable3_5  ;; 0x4004d0a0
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0x....             LDR.N    R1,??DataTable3_9  ;; 0x1010000
   \   00000042   0x4308             ORRS     R0,R1,R0
   \   00000044   0x....             LDR.N    R1,??DataTable3_5  ;; 0x4004d0a0
   \   00000046   0x6008             STR      R0,[R1, #+0]
     53            EN_ExtKeyInt();
   \   00000048   0x....             LDR.N    R0,??DataTable3_7  ;; 0x4004d040
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0xF450 0x2020      ORRS     R0,R0,#0xA0000
   \   00000050   0x....             LDR.N    R1,??DataTable3_7  ;; 0x4004d040
   \   00000052   0x6008             STR      R0,[R1, #+0]
   \   00000054   0x....             LDR.N    R0,??DataTable3_10  ;; 0x4004d060
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0xF450 0x2020      ORRS     R0,R0,#0xA0000
   \   0000005C   0x....             LDR.N    R1,??DataTable3_10  ;; 0x4004d060
   \   0000005E   0x6008             STR      R0,[R1, #+0]
     54          }
   \   00000060   0xBD01             POP      {R0,PC}          ;; return
     55          

   \                                 In section .text, align 2, keep-with-next
     56          ISR_Enternet(){
     57            DIS_EnternetInt();
   \                     PTC12_ISR:
   \   00000000   0x....             LDR.N    R0,??DataTable3_11  ;; 0x4004b030
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF430 0x2070      BICS     R0,R0,#0xF0000
   \   00000008   0x....             LDR.N    R1,??DataTable3_11  ;; 0x4004b030
   \   0000000A   0x6008             STR      R0,[R1, #+0]
     58            CLR_EnternetInt();
   \   0000000C   0x....             LDR.N    R0,??DataTable3_12  ;; 0x4004b0a0
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0xF450 0x5080      ORRS     R0,R0,#0x1000
   \   00000014   0x....             LDR.N    R1,??DataTable3_12  ;; 0x4004b0a0
   \   00000016   0x6008             STR      R0,[R1, #+0]
     59            EN_EnternetInt();
   \   00000018   0x....             LDR.N    R0,??DataTable3_11  ;; 0x4004b030
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0xF450 0x2020      ORRS     R0,R0,#0xA0000
   \   00000020   0x....             LDR.N    R1,??DataTable3_11  ;; 0x4004b030
   \   00000022   0x6008             STR      R0,[R1, #+0]
     60          }
   \   00000024   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x4003710C         DC32     0x4003710c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     SysTick

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x4004A0A0         DC32     0x4004a0a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x4004A04C         DC32     0x4004a04c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     Key_Valid

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x4004D0A0         DC32     0x4004d0a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     ExtKeyValue

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x4004D040         DC32     0x4004d040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x........         DC32     ptrExtKeyProc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x01010000         DC32     0x1010000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x4004D060         DC32     0x4004d060

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x4004B030         DC32     0x4004b030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x4004B0A0         DC32     0x4004b0a0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  Key_ISR
             8 -- Indirect call
        0  PTB19_ISR
        0  PTC12_ISR
        8  PTI0_ISR
             8 -> LED_CtlProc
             8 -> Process_BuzzerCtrl


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
      98  Key_ISR
      40  PTB19_ISR
      38  PTC12_ISR
      32  PTI0_ISR
       2  SysTick

 
   2 bytes in section .bss
 260 bytes in section .text
 
 260 bytes of CODE memory
   2 bytes of DATA memory

Errors: none
Warnings: 1
