###############################################################################
#                                                                             #
#                                                       03/Nov/2015  20:45:54 #
# IAR ANSI C/C++ Compiler V6.30.6.23336/W32 EVALUATION for ARM                #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\WangChangan\Desktop\K10Ð¡°å¶¨¸å\ZLG7290\ZLG7290 #
#                    .c                                                       #
#    Command line =  C:\Users\WangChangan\Desktop\K10Ð¡°å¶¨¸å\ZLG7290\ZLG7290 #
#                    .c -D COMPILER_IAR -lCN "C:\Users\WangChangan\Desktop\K1 #
#                    0Ð¡°å¶¨¸å\IAR Files\FLASH\List\" -lB                     #
#                    "C:\Users\WangChangan\Desktop\K10Ð¡°å¶¨¸å\IAR            #
#                    Files\FLASH\List\" -o "C:\Users\WangChangan\Desktop\K10Ð #
#                    ¡°å¶¨¸å\IAR Files\FLASH\Obj\" --no_cse --no_unroll       #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "C:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.0                           #
#                    Evaluation\arm\INC\c\DLib_Config_Normal.h" -I            #
#                    "C:\Users\WangChangan\Desktop\K10Ð¡°å¶¨¸å\IAR            #
#                    Files\..\Project_Headers\" -I                            #
#                    "C:\Users\WangChangan\Desktop\K10Ð¡°å¶¨¸å\IAR            #
#                    Files\..\KinetisDrivers\" -I                             #
#                    "C:\Users\WangChangan\Desktop\K10Ð¡°å¶¨¸å\IAR            #
#                    Files\..\ExtraFunction\" -I                              #
#                    "C:\Users\WangChangan\Desktop\K10Ð¡°å¶¨¸å\IAR            #
#                    Files\..\Hardware_Interface\" -I                         #
#                    "C:\Users\WangChangan\Desktop\K10Ð¡°å¶¨¸å\IAR            #
#                    Files\..\Make_Decision\" -I                              #
#                    "C:\Users\WangChangan\Desktop\K10Ð¡°å¶¨¸å\IAR            #
#                    Files\..\Math\" -I "C:\Users\WangChangan\Desktop\K10Ð¡°å #
#                    ¶¨¸å\IAR Files\..\Original_Process\" -I                  #
#                    "C:\Users\WangChangan\Desktop\K10Ð¡°å¶¨¸å\IAR            #
#                    Files\..\Platform\" -I "C:\Users\WangChangan\Desktop\K10 #
#                    Ð¡°å¶¨¸å\IAR Files\..\SD_System\" -I                     #
#                    "C:\Users\WangChangan\Desktop\K10Ð¡°å¶¨¸å\IAR            #
#                    Files\..\Source\" -I "C:\Users\WangChangan\Desktop\K10Ð¡ #
#                    °å¶¨¸å\IAR Files\..\System_Init\" -Ol                    #
#    List file    =  C:\Users\WangChangan\Desktop\K10Ð¡°å¶¨¸å\IAR             #
#                    Files\FLASH\List\ZLG7290.lst                             #
#    Object file  =  C:\Users\WangChangan\Desktop\K10Ð¡°å¶¨¸å\IAR             #
#                    Files\FLASH\Obj\ZLG7290.o                                #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\WangChangan\Desktop\K10Ð¡°å¶¨¸å\ZLG7290\ZLG7290.c
      1          #include "./ZLG7290.h"
      2          #include "../Platform/Platform.h"
      3          

   \                                 In section .bss, align 4
      4          ptrKeyCallBackFunc ptrKeyPadFunc;
   \                     ptrKeyPadFunc:
   \   00000000                      DS8 4
      5          #if EN_KeyPad != 0
      6          

   \                                 In section .bss, align 1
      7          INT8U Key_Valid = 0;
   \                     Key_Valid:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
      8          INT16U Key_Value = 0;
   \                     Key_Value:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
      9          INT8U KeyPad_Mask = 0;
   \                     KeyPad_Mask:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
     10          INT16U ExtKeyValue = 0;
   \                     ExtKeyValue:
   \   00000000                      DS8 2
     11          /******************************************************************************
     12          * º¯ÊýÃû³Æ: LongDelay_7290
     13          * º¯Êý¹¦ÄÜ: 7290³¤Ê±¼äÑÓÊ±º¯Êý.
     14          ******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
     15          static void LongDelay_7290(void)
     16          {
   \                     LongDelay_7290:
   \   00000000   0xB081             SUB      SP,SP,#+4
     17              volatile INT16U i, j;
     18              
     19              for(j = 120; j > 0; j--)
   \   00000002   0x2078             MOVS     R0,#+120
   \   00000004   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   \   00000008   0xE019             B.N      ??LongDelay_7290_0
     20              {
     21                  for(i = LONG_DELAY_TIME_7290; i > 0; i--) C_WDOG_IntOn();
   \                     ??LongDelay_7290_1:
   \   0000000A   0xB672             CPSID i         
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x4005200c
   \   00000010   0xF24A 0x6102      MOVW     R1,#+42498
   \   00000014   0x8001             STRH     R1,[R0, #+0]
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x4005200c
   \   0000001A   0xF24B 0x4180      MOVW     R1,#+46208
   \   0000001E   0x8001             STRH     R1,[R0, #+0]
   \   00000020   0xB662             CPSIE i         
   \   00000022   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   00000026   0x1E40             SUBS     R0,R0,#+1
   \   00000028   0xF8AD 0x0002      STRH     R0,[SP, #+2]
   \                     ??LongDelay_7290_2:
   \   0000002C   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   00000030   0x2801             CMP      R0,#+1
   \   00000032   0xD2EA             BCS.N    ??LongDelay_7290_1
   \   00000034   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000038   0x1E40             SUBS     R0,R0,#+1
   \   0000003A   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   \                     ??LongDelay_7290_0:
   \   0000003E   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000042   0x2801             CMP      R0,#+1
   \   00000044   0xD304             BCC.N    ??LongDelay_7290_3
   \   00000046   0xF44F 0x7061      MOV      R0,#+900
   \   0000004A   0xF8AD 0x0002      STRH     R0,[SP, #+2]
   \   0000004E   0xE7ED             B.N      ??LongDelay_7290_2
     22              }
     23          }
   \                     ??LongDelay_7290_3:
   \   00000050   0xB001             ADD      SP,SP,#+4
   \   00000052   0x4770             BX       LR               ;; return
     24          /******************************************************************************
     25          * º¯ÊýÃû³Æ: ShortDelay_7290
     26          * º¯Êý¹¦ÄÜ: 7290¶ÌÊ±¼äÑÓÊ±º¯Êý.
     27          ******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
     28          static void ShortDelay_7290(void)
     29          { 
   \                     ShortDelay_7290:
   \   00000000   0xB081             SUB      SP,SP,#+4
     30              volatile INT16S Num = SHORT_DELAY_TIME_7290;
   \   00000002   0x205A             MOVS     R0,#+90
   \   00000004   0xF8AD 0x0002      STRH     R0,[SP, #+2]
     31              volatile INT16S i;
     32            
     33              while(Num--)
   \                     ??ShortDelay_7290_0:
   \   00000008   0xF9BD 0x0002      LDRSH    R0,[SP, #+2]
   \   0000000C   0x1E41             SUBS     R1,R0,#+1
   \   0000000E   0xF8AD 0x1002      STRH     R1,[SP, #+2]
   \   00000012   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD018             BEQ.N    ??ShortDelay_7290_1
     34              {
     35                  for(i = 0; i < 2; i++) C_WDOG_IntOn();
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   \                     ??ShortDelay_7290_2:
   \   0000001E   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   00000022   0x2802             CMP      R0,#+2
   \   00000024   0xDAF0             BGE.N    ??ShortDelay_7290_0
   \   00000026   0xB672             CPSID i         
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x4005200c
   \   0000002C   0xF24A 0x6102      MOVW     R1,#+42498
   \   00000030   0x8001             STRH     R1,[R0, #+0]
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x4005200c
   \   00000036   0xF24B 0x4180      MOVW     R1,#+46208
   \   0000003A   0x8001             STRH     R1,[R0, #+0]
   \   0000003C   0xB662             CPSIE i         
   \   0000003E   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000042   0x1C40             ADDS     R0,R0,#+1
   \   00000044   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   \   00000048   0xE7E9             B.N      ??ShortDelay_7290_2
     36              }
     37          }
   \                     ??ShortDelay_7290_1:
   \   0000004A   0xB001             ADD      SP,SP,#+4
   \   0000004C   0x4770             BX       LR               ;; return
     38          
     39          /******************************************************************************
     40          * º¯ÊýÃû³Æ: StartI2C_7290
     41          * º¯Êý¹¦ÄÜ: I2CÆô¶¯ÐÅºÅ.
     42          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     43          static void StartI2C_7290(void)
     44          {
   \                     StartI2C_7290:
   \   00000000   0xB580             PUSH     {R7,LR}
     45              SET_SCL_OUT_7290();
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable9_1  ;; 0x400ff054
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable9_1  ;; 0x400ff054
   \   00000010   0x6008             STR      R0,[R1, #+0]
     46              SET_SDA_OUT_7290();
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable9_1  ;; 0x400ff054
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xF450 0x3000      ORRS     R0,R0,#0x20000
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable9_1  ;; 0x400ff054
   \   00000020   0x6008             STR      R0,[R1, #+0]
     47              
     48              SET_SDA_HIGH_7290();  
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable9_2  ;; 0x400ff044
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0xF450 0x3000      ORRS     R0,R0,#0x20000
   \   0000002C   0x....             LDR.N    R1,??DataTable9_2  ;; 0x400ff044
   \   0000002E   0x6008             STR      R0,[R1, #+0]
     49              ShortDelay_7290();
   \   00000030   0x.... 0x....      BL       ShortDelay_7290
     50            
     51              SET_SCL_HIGH_7290();
   \   00000034   0x....             LDR.N    R0,??DataTable9_2  ;; 0x400ff044
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   0000003C   0x....             LDR.N    R1,??DataTable9_2  ;; 0x400ff044
   \   0000003E   0x6008             STR      R0,[R1, #+0]
     52              ShortDelay_7290();ShortDelay_7290();
   \   00000040   0x.... 0x....      BL       ShortDelay_7290
   \   00000044   0x.... 0x....      BL       ShortDelay_7290
     53              ShortDelay_7290();ShortDelay_7290();
   \   00000048   0x.... 0x....      BL       ShortDelay_7290
   \   0000004C   0x.... 0x....      BL       ShortDelay_7290
     54            
     55              SET_SDA_LOW_7290();
   \   00000050   0x....             LDR.N    R0,??DataTable9_3  ;; 0x400ff048
   \   00000052   0x6800             LDR      R0,[R0, #+0]
   \   00000054   0xF450 0x3000      ORRS     R0,R0,#0x20000
   \   00000058   0x....             LDR.N    R1,??DataTable9_3  ;; 0x400ff048
   \   0000005A   0x6008             STR      R0,[R1, #+0]
     56              ShortDelay_7290();ShortDelay_7290();
   \   0000005C   0x.... 0x....      BL       ShortDelay_7290
   \   00000060   0x.... 0x....      BL       ShortDelay_7290
     57              ShortDelay_7290();ShortDelay_7290();
   \   00000064   0x.... 0x....      BL       ShortDelay_7290
   \   00000068   0x.... 0x....      BL       ShortDelay_7290
     58          }
   \   0000006C   0xBD01             POP      {R0,PC}          ;; return
     59          /******************************************************************************
     60          * º¯ÊýÃû³Æ: StopI2C_7290
     61          * º¯Êý¹¦ÄÜ: I2C½áÊøÐÅºÅ.
     62          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     63          static void StopI2C_7290(void)
     64          {
   \                     StopI2C_7290:
   \   00000000   0xB580             PUSH     {R7,LR}
     65              SET_SCL_OUT_7290();
   \   00000002   0x....             LDR.N    R0,??DataTable9_1  ;; 0x400ff054
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   0000000A   0x....             LDR.N    R1,??DataTable9_1  ;; 0x400ff054
   \   0000000C   0x6008             STR      R0,[R1, #+0]
     66              SET_SDA_OUT_7290();
   \   0000000E   0x....             LDR.N    R0,??DataTable9_1  ;; 0x400ff054
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0xF450 0x3000      ORRS     R0,R0,#0x20000
   \   00000016   0x....             LDR.N    R1,??DataTable9_1  ;; 0x400ff054
   \   00000018   0x6008             STR      R0,[R1, #+0]
     67              
     68              SET_SDA_LOW_7290();
   \   0000001A   0x....             LDR.N    R0,??DataTable9_3  ;; 0x400ff048
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF450 0x3000      ORRS     R0,R0,#0x20000
   \   00000022   0x....             LDR.N    R1,??DataTable9_3  ;; 0x400ff048
   \   00000024   0x6008             STR      R0,[R1, #+0]
     69              ShortDelay_7290();
   \   00000026   0x.... 0x....      BL       ShortDelay_7290
     70            
     71              SET_SCL_HIGH_7290();
   \   0000002A   0x....             LDR.N    R0,??DataTable9_2  ;; 0x400ff044
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   00000032   0x....             LDR.N    R1,??DataTable9_2  ;; 0x400ff044
   \   00000034   0x6008             STR      R0,[R1, #+0]
     72              ShortDelay_7290();ShortDelay_7290();
   \   00000036   0x.... 0x....      BL       ShortDelay_7290
   \   0000003A   0x.... 0x....      BL       ShortDelay_7290
     73              ShortDelay_7290();ShortDelay_7290();
   \   0000003E   0x.... 0x....      BL       ShortDelay_7290
   \   00000042   0x.... 0x....      BL       ShortDelay_7290
     74            
     75              SET_SDA_HIGH_7290();
   \   00000046   0x....             LDR.N    R0,??DataTable9_2  ;; 0x400ff044
   \   00000048   0x6800             LDR      R0,[R0, #+0]
   \   0000004A   0xF450 0x3000      ORRS     R0,R0,#0x20000
   \   0000004E   0x....             LDR.N    R1,??DataTable9_2  ;; 0x400ff044
   \   00000050   0x6008             STR      R0,[R1, #+0]
     76              ShortDelay_7290();ShortDelay_7290();
   \   00000052   0x.... 0x....      BL       ShortDelay_7290
   \   00000056   0x.... 0x....      BL       ShortDelay_7290
     77              ShortDelay_7290();ShortDelay_7290();
   \   0000005A   0x.... 0x....      BL       ShortDelay_7290
   \   0000005E   0x.... 0x....      BL       ShortDelay_7290
     78          }
   \   00000062   0xBD01             POP      {R0,PC}          ;; return
     79          
     80          /******************************************************************************
     81          * º¯ÊýÃû³Æ: WackI2C_7290
     82          * º¯Êý¹¦ÄÜ: ½ÓÊÕI2CÓ¦´ðÐÅºÅ.
     83          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     84          static void WackI2C_7290(void)
     85          { 
   \                     WackI2C_7290:
   \   00000000   0xB580             PUSH     {R7,LR}
     86              SET_SCL_OUT_7290();
   \   00000002   0x....             LDR.N    R0,??DataTable9_1  ;; 0x400ff054
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   0000000A   0x....             LDR.N    R1,??DataTable9_1  ;; 0x400ff054
   \   0000000C   0x6008             STR      R0,[R1, #+0]
     87              SET_SDA_OUT_7290();
   \   0000000E   0x....             LDR.N    R0,??DataTable9_1  ;; 0x400ff054
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0xF450 0x3000      ORRS     R0,R0,#0x20000
   \   00000016   0x....             LDR.N    R1,??DataTable9_1  ;; 0x400ff054
   \   00000018   0x6008             STR      R0,[R1, #+0]
     88              SET_SDA_HIGH_7290();
   \   0000001A   0x....             LDR.N    R0,??DataTable9_2  ;; 0x400ff044
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF450 0x3000      ORRS     R0,R0,#0x20000
   \   00000022   0x....             LDR.N    R1,??DataTable9_2  ;; 0x400ff044
   \   00000024   0x6008             STR      R0,[R1, #+0]
     89              ShortDelay_7290();
   \   00000026   0x.... 0x....      BL       ShortDelay_7290
     90            
     91              SET_SCL_LOW_7290();
   \   0000002A   0x....             LDR.N    R0,??DataTable9_3  ;; 0x400ff048
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   00000032   0x....             LDR.N    R1,??DataTable9_3  ;; 0x400ff048
   \   00000034   0x6008             STR      R0,[R1, #+0]
     92              ShortDelay_7290();ShortDelay_7290();
   \   00000036   0x.... 0x....      BL       ShortDelay_7290
   \   0000003A   0x.... 0x....      BL       ShortDelay_7290
     93              ShortDelay_7290();ShortDelay_7290();
   \   0000003E   0x.... 0x....      BL       ShortDelay_7290
   \   00000042   0x.... 0x....      BL       ShortDelay_7290
     94            
     95              SET_SCL_HIGH_7290();
   \   00000046   0x....             LDR.N    R0,??DataTable9_2  ;; 0x400ff044
   \   00000048   0x6800             LDR      R0,[R0, #+0]
   \   0000004A   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   0000004E   0x....             LDR.N    R1,??DataTable9_2  ;; 0x400ff044
   \   00000050   0x6008             STR      R0,[R1, #+0]
     96              ShortDelay_7290();ShortDelay_7290();
   \   00000052   0x.... 0x....      BL       ShortDelay_7290
   \   00000056   0x.... 0x....      BL       ShortDelay_7290
     97              ShortDelay_7290();ShortDelay_7290();
   \   0000005A   0x.... 0x....      BL       ShortDelay_7290
   \   0000005E   0x.... 0x....      BL       ShortDelay_7290
     98            
     99              SET_SCL_LOW_7290();
   \   00000062   0x....             LDR.N    R0,??DataTable9_3  ;; 0x400ff048
   \   00000064   0x6800             LDR      R0,[R0, #+0]
   \   00000066   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   0000006A   0x....             LDR.N    R1,??DataTable9_3  ;; 0x400ff048
   \   0000006C   0x6008             STR      R0,[R1, #+0]
    100              ShortDelay_7290();ShortDelay_7290();
   \   0000006E   0x.... 0x....      BL       ShortDelay_7290
   \   00000072   0x.... 0x....      BL       ShortDelay_7290
    101              ShortDelay_7290();ShortDelay_7290();
   \   00000076   0x.... 0x....      BL       ShortDelay_7290
   \   0000007A   0x.... 0x....      BL       ShortDelay_7290
    102          }
   \   0000007E   0xBD01             POP      {R0,PC}          ;; return
    103          
    104          /******************************************************************************
    105          * º¯ÊýÃû³Æ: WriteByteI2C_7290
    106          * º¯Êý¹¦ÄÜ: Í¨¹ýI2C·¢ËÍÒ»×Ö½ÚÊý¾Ý.
    107          * Èë¿Ú²ÎÊý: dat  ´ý·¢ËÍÊý¾Ý
    108          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    109          static void WriteByteI2C_7290(INT8U dat)
    110          {
   \                     WriteByteI2C_7290:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    111              INT8U i = 8, temp;
   \   00000004   0x2508             MOVS     R5,#+8
    112              
    113              SET_SCL_OUT_7290();
   \   00000006   0x....             LDR.N    R0,??DataTable9_1  ;; 0x400ff054
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   0000000E   0x....             LDR.N    R1,??DataTable9_1  ;; 0x400ff054
   \   00000010   0x6008             STR      R0,[R1, #+0]
    114              SET_SDA_OUT_7290();
   \   00000012   0x....             LDR.N    R0,??DataTable9_1  ;; 0x400ff054
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0xF450 0x3000      ORRS     R0,R0,#0x20000
   \   0000001A   0x....             LDR.N    R1,??DataTable9_1  ;; 0x400ff054
   \   0000001C   0x6008             STR      R0,[R1, #+0]
    115              
    116              SET_SCL_LOW_7290();
   \   0000001E   0x....             LDR.N    R0,??DataTable9_3  ;; 0x400ff048
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   00000026   0x....             LDR.N    R1,??DataTable9_3  ;; 0x400ff048
   \   00000028   0x6008             STR      R0,[R1, #+0]
    117              ShortDelay_7290();ShortDelay_7290();
   \   0000002A   0x.... 0x....      BL       ShortDelay_7290
   \   0000002E   0x.... 0x....      BL       ShortDelay_7290
    118              ShortDelay_7290();ShortDelay_7290();
   \   00000032   0x.... 0x....      BL       ShortDelay_7290
   \   00000036   0x.... 0x....      BL       ShortDelay_7290
   \   0000003A   0xE02A             B.N      ??WriteByteI2C_7290_0
    119          
    120              while(i--)
    121              {     
    122                temp = dat & 0x80;
    123                if(temp == 0)
    124                {
    125                    SET_SDA_LOW_7290();
    126                }
    127                else
    128                {
    129                    SET_SDA_HIGH_7290();
   \                     ??WriteByteI2C_7290_1:
   \   0000003C   0x....             LDR.N    R0,??DataTable9_2  ;; 0x400ff044
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0xF450 0x3000      ORRS     R0,R0,#0x20000
   \   00000044   0x....             LDR.N    R1,??DataTable9_2  ;; 0x400ff044
   \   00000046   0x6008             STR      R0,[R1, #+0]
    130                }
    131                ShortDelay_7290();ShortDelay_7290();
   \                     ??WriteByteI2C_7290_2:
   \   00000048   0x.... 0x....      BL       ShortDelay_7290
   \   0000004C   0x.... 0x....      BL       ShortDelay_7290
    132                ShortDelay_7290();ShortDelay_7290();
   \   00000050   0x.... 0x....      BL       ShortDelay_7290
   \   00000054   0x.... 0x....      BL       ShortDelay_7290
    133          
    134                dat <<= 1;
   \   00000058   0x0064             LSLS     R4,R4,#+1
    135          
    136                SET_SCL_HIGH_7290();
   \   0000005A   0x....             LDR.N    R0,??DataTable9_2  ;; 0x400ff044
   \   0000005C   0x6800             LDR      R0,[R0, #+0]
   \   0000005E   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   00000062   0x....             LDR.N    R1,??DataTable9_2  ;; 0x400ff044
   \   00000064   0x6008             STR      R0,[R1, #+0]
    137                ShortDelay_7290();ShortDelay_7290();
   \   00000066   0x.... 0x....      BL       ShortDelay_7290
   \   0000006A   0x.... 0x....      BL       ShortDelay_7290
    138                ShortDelay_7290();ShortDelay_7290();
   \   0000006E   0x.... 0x....      BL       ShortDelay_7290
   \   00000072   0x.... 0x....      BL       ShortDelay_7290
    139          
    140                SET_SCL_LOW_7290();
   \   00000076   0x....             LDR.N    R0,??DataTable9_3  ;; 0x400ff048
   \   00000078   0x6800             LDR      R0,[R0, #+0]
   \   0000007A   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   0000007E   0x....             LDR.N    R1,??DataTable9_3  ;; 0x400ff048
   \   00000080   0x6008             STR      R0,[R1, #+0]
    141                ShortDelay_7290();ShortDelay_7290();
   \   00000082   0x.... 0x....      BL       ShortDelay_7290
   \   00000086   0x.... 0x....      BL       ShortDelay_7290
    142                ShortDelay_7290();ShortDelay_7290();
   \   0000008A   0x.... 0x....      BL       ShortDelay_7290
   \   0000008E   0x.... 0x....      BL       ShortDelay_7290
   \                     ??WriteByteI2C_7290_0:
   \   00000092   0x0028             MOVS     R0,R5
   \   00000094   0x1E45             SUBS     R5,R0,#+1
   \   00000096   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000098   0x2800             CMP      R0,#+0
   \   0000009A   0xD00B             BEQ.N    ??WriteByteI2C_7290_3
   \   0000009C   0xF014 0x0080      ANDS     R0,R4,#0x80
   \   000000A0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000A2   0x2800             CMP      R0,#+0
   \   000000A4   0xD1CA             BNE.N    ??WriteByteI2C_7290_1
   \   000000A6   0x....             LDR.N    R0,??DataTable9_3  ;; 0x400ff048
   \   000000A8   0x6800             LDR      R0,[R0, #+0]
   \   000000AA   0xF450 0x3000      ORRS     R0,R0,#0x20000
   \   000000AE   0x....             LDR.N    R1,??DataTable9_3  ;; 0x400ff048
   \   000000B0   0x6008             STR      R0,[R1, #+0]
   \   000000B2   0xE7C9             B.N      ??WriteByteI2C_7290_2
    143              }
    144          
    145              ShortDelay_7290();ShortDelay_7290();
   \                     ??WriteByteI2C_7290_3:
   \   000000B4   0x.... 0x....      BL       ShortDelay_7290
   \   000000B8   0x.... 0x....      BL       ShortDelay_7290
    146              ShortDelay_7290();ShortDelay_7290();
   \   000000BC   0x.... 0x....      BL       ShortDelay_7290
   \   000000C0   0x.... 0x....      BL       ShortDelay_7290
    147              ShortDelay_7290();ShortDelay_7290();
   \   000000C4   0x.... 0x....      BL       ShortDelay_7290
   \   000000C8   0x.... 0x....      BL       ShortDelay_7290
    148          }
   \   000000CC   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    149          /******************************************************************************
    150          * º¯ÊýÃû³Æ: ReadByteI2C_7290
    151          * º¯Êý¹¦ÄÜ: Í¨¹ýI2C¶ÁÈ¡Ò»×Ö½ÚÊý¾Ý.
    152          * ·µ»Ø²ÎÊý: ¶ÁÈ¡½á¹û
    153          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    154          static INT8U ReadByteI2C_7290(void)
    155          {
   \                     ReadByteI2C_7290:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    156              INT8U dat = 0x00;
   \   00000002   0x2400             MOVS     R4,#+0
    157              INT8U i   = 8;
   \   00000004   0x2508             MOVS     R5,#+8
   \   00000006   0xE048             B.N      ??ReadByteI2C_7290_0
    158              
    159              while(i--)
    160              { 
    161                  SET_SCL_OUT_7290();
   \                     ??ReadByteI2C_7290_1:
   \   00000008   0x....             LDR.N    R0,??DataTable9_1  ;; 0x400ff054
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   00000010   0x....             LDR.N    R1,??DataTable9_1  ;; 0x400ff054
   \   00000012   0x6008             STR      R0,[R1, #+0]
    162                  SET_SDA_OUT_7290();
   \   00000014   0x....             LDR.N    R0,??DataTable9_1  ;; 0x400ff054
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xF450 0x3000      ORRS     R0,R0,#0x20000
   \   0000001C   0x....             LDR.N    R1,??DataTable9_1  ;; 0x400ff054
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    163                  
    164                  SET_SDA_HIGH_7290();
   \   00000020   0x....             LDR.N    R0,??DataTable9_2  ;; 0x400ff044
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0xF450 0x3000      ORRS     R0,R0,#0x20000
   \   00000028   0x....             LDR.N    R1,??DataTable9_2  ;; 0x400ff044
   \   0000002A   0x6008             STR      R0,[R1, #+0]
    165                  ShortDelay_7290();ShortDelay_7290();
   \   0000002C   0x.... 0x....      BL       ShortDelay_7290
   \   00000030   0x.... 0x....      BL       ShortDelay_7290
    166                  ShortDelay_7290();ShortDelay_7290();
   \   00000034   0x.... 0x....      BL       ShortDelay_7290
   \   00000038   0x.... 0x....      BL       ShortDelay_7290
    167                  
    168                  SET_SCL_OUT_7290();
   \   0000003C   0x....             LDR.N    R0,??DataTable9_1  ;; 0x400ff054
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   00000044   0x....             LDR.N    R1,??DataTable9_1  ;; 0x400ff054
   \   00000046   0x6008             STR      R0,[R1, #+0]
    169                  SET_SDA_IN_7290();  /* SDAµÄ·½Ïò¸Ä±ä:SCLÊä³ö£¬SDAÊäÈë */
   \   00000048   0x....             LDR.N    R0,??DataTable9_1  ;; 0x400ff054
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0xF430 0x3000      BICS     R0,R0,#0x20000
   \   00000050   0x....             LDR.N    R1,??DataTable9_1  ;; 0x400ff054
   \   00000052   0x6008             STR      R0,[R1, #+0]
    170                  
    171                  dat <<= 1;
   \   00000054   0x0064             LSLS     R4,R4,#+1
    172                  SET_SCL_LOW_7290();
   \   00000056   0x....             LDR.N    R0,??DataTable9_3  ;; 0x400ff048
   \   00000058   0x6800             LDR      R0,[R0, #+0]
   \   0000005A   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   0000005E   0x....             LDR.N    R1,??DataTable9_3  ;; 0x400ff048
   \   00000060   0x6008             STR      R0,[R1, #+0]
    173                  ShortDelay_7290();ShortDelay_7290();
   \   00000062   0x.... 0x....      BL       ShortDelay_7290
   \   00000066   0x.... 0x....      BL       ShortDelay_7290
    174                  ShortDelay_7290();ShortDelay_7290();
   \   0000006A   0x.... 0x....      BL       ShortDelay_7290
   \   0000006E   0x.... 0x....      BL       ShortDelay_7290
    175          
    176                  SET_SCL_HIGH_7290();
   \   00000072   0x....             LDR.N    R0,??DataTable9_2  ;; 0x400ff044
   \   00000074   0x6800             LDR      R0,[R0, #+0]
   \   00000076   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   0000007A   0x....             LDR.N    R1,??DataTable9_2  ;; 0x400ff044
   \   0000007C   0x6008             STR      R0,[R1, #+0]
    177                  ShortDelay_7290();ShortDelay_7290();
   \   0000007E   0x.... 0x....      BL       ShortDelay_7290
   \   00000082   0x.... 0x....      BL       ShortDelay_7290
    178                  ShortDelay_7290();ShortDelay_7290();
   \   00000086   0x.... 0x....      BL       ShortDelay_7290
   \   0000008A   0x.... 0x....      BL       ShortDelay_7290
    179          
    180                  if(READ_SDA_7290() != 0)
   \   0000008E   0x....             LDR.N    R0,??DataTable9_4  ;; 0x400ff050
   \   00000090   0x6800             LDR      R0,[R0, #+0]
   \   00000092   0x0380             LSLS     R0,R0,#+14
   \   00000094   0xD501             BPL.N    ??ReadByteI2C_7290_0
    181                  {
    182                      dat |= 0x01;
   \   00000096   0xF054 0x0401      ORRS     R4,R4,#0x1
    183                  }
    184              }
   \                     ??ReadByteI2C_7290_0:
   \   0000009A   0x0028             MOVS     R0,R5
   \   0000009C   0x1E45             SUBS     R5,R0,#+1
   \   0000009E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000A0   0x2800             CMP      R0,#+0
   \   000000A2   0xD1B1             BNE.N    ??ReadByteI2C_7290_1
    185          
    186              SET_SCL_OUT_7290();
   \   000000A4   0x....             LDR.N    R0,??DataTable9_1  ;; 0x400ff054
   \   000000A6   0x6800             LDR      R0,[R0, #+0]
   \   000000A8   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   000000AC   0x....             LDR.N    R1,??DataTable9_1  ;; 0x400ff054
   \   000000AE   0x6008             STR      R0,[R1, #+0]
    187              SET_SDA_OUT_7290();
   \   000000B0   0x....             LDR.N    R0,??DataTable9_1  ;; 0x400ff054
   \   000000B2   0x6800             LDR      R0,[R0, #+0]
   \   000000B4   0xF450 0x3000      ORRS     R0,R0,#0x20000
   \   000000B8   0x....             LDR.N    R1,??DataTable9_1  ;; 0x400ff054
   \   000000BA   0x6008             STR      R0,[R1, #+0]
    188              SET_SCL_LOW_7290();
   \   000000BC   0x....             LDR.N    R0,??DataTable9_3  ;; 0x400ff048
   \   000000BE   0x6800             LDR      R0,[R0, #+0]
   \   000000C0   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   000000C4   0x....             LDR.N    R1,??DataTable9_3  ;; 0x400ff048
   \   000000C6   0x6008             STR      R0,[R1, #+0]
    189              SET_SDA_HIGH_7290();
   \   000000C8   0x....             LDR.N    R0,??DataTable9_2  ;; 0x400ff044
   \   000000CA   0x6800             LDR      R0,[R0, #+0]
   \   000000CC   0xF450 0x3000      ORRS     R0,R0,#0x20000
   \   000000D0   0x....             LDR.N    R1,??DataTable9_2  ;; 0x400ff044
   \   000000D2   0x6008             STR      R0,[R1, #+0]
    190              
    191              return dat;
   \   000000D4   0x0020             MOVS     R0,R4
   \   000000D6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000D8   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    192          }
    193          
    194          /************************************************************************************************ 
    195          * IntKeyPad_Init
    196          * ³õÊ¼»¯¼üÅÌÖÐ¶Ï(PTB19)
    197          ************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    198          static void IntKeyPad_Init(void)
    199          {
   \                     IntKeyPad_Init:
   \   00000000   0xB580             PUSH     {R7,LR}
    200            PORTB_PCR19 = PORT_PCR_MUX(1) | PORT_PCR_PE_MASK;
   \   00000002   0x....             LDR.N    R0,??DataTable9_5  ;; 0x4004a04c
   \   00000004   0xF44F 0x7181      MOV      R1,#+258
   \   00000008   0x6001             STR      R1,[R0, #+0]
    201          	                                   /* Ê¹ÄÜÏÂÀ­µç×è */
    202                                                     /* ¸ÃÖÐ¶Ï½«±»ÉèÖÃÎªÏÂ½µÑØ */
    203            (void)EnableInt_Kinetis(88);             /* ¿ªÆô¶ÔÓ¦µÄÖÐ¶Ï */
   \   0000000A   0x2058             MOVS     R0,#+88
   \   0000000C   0x.... 0x....      BL       EnableInt_Kinetis
    204          }
   \   00000010   0xBD01             POP      {R0,PC}          ;; return
    205          
    206          /******************************************************************************
    207          * º¯ÊýÃû³Æ: Init_Chip7290
    208          * º¯Êý¹¦ÄÜ: ³õÊ¼»¯7290
    209          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    210          static void Init_Chip7290(void)
    211          {
   \                     Init_Chip7290:
   \   00000000   0xB580             PUSH     {R7,LR}
    212            INIT_SCL_7290();
   \   00000002   0x....             LDR.N    R0,??DataTable9_6  ;; 0x4004a05c
   \   00000004   0xF240 0x1103      MOVW     R1,#+259
   \   00000008   0x6001             STR      R1,[R0, #+0]
    213            INIT_SDA_7290();
   \   0000000A   0x....             LDR.N    R0,??DataTable9_7  ;; 0x4004a044
   \   0000000C   0xF240 0x1103      MOVW     R1,#+259
   \   00000010   0x6001             STR      R1,[R0, #+0]
    214            
    215            StartI2C_7290();              
   \   00000012   0x.... 0x....      BL       StartI2C_7290
    216            WriteByteI2C_7290(SLVADDR_7290);
   \   00000016   0x2070             MOVS     R0,#+112
   \   00000018   0x.... 0x....      BL       WriteByteI2C_7290
    217            WackI2C_7290();
   \   0000001C   0x.... 0x....      BL       WackI2C_7290
    218          
    219            WriteByteI2C_7290(0x0D);
   \   00000020   0x200D             MOVS     R0,#+13
   \   00000022   0x.... 0x....      BL       WriteByteI2C_7290
    220            WackI2C_7290();
   \   00000026   0x.... 0x....      BL       WackI2C_7290
    221          
    222            WriteByteI2C_7290(0x03);
   \   0000002A   0x2003             MOVS     R0,#+3
   \   0000002C   0x.... 0x....      BL       WriteByteI2C_7290
    223            WackI2C_7290();
   \   00000030   0x.... 0x....      BL       WackI2C_7290
    224          
    225            StopI2C_7290();
   \   00000034   0x.... 0x....      BL       StopI2C_7290
    226            LongDelay_7290();
   \   00000038   0x.... 0x....      BL       LongDelay_7290
    227          }
   \   0000003C   0xBD01             POP      {R0,PC}          ;; return
    228          
    229          /************************************************************************************************ 
    230          * KeyPad_Init
    231          * ¼üÅÌ³õÊ¼»¯ÉèÖÃ
    232          * PTB19-INT PTB17-SDA PTB23-SCL
    233          ************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    234          void KeyPad_Init(ptrKeyCallBackFunc func)    
    235          { 
   \                     KeyPad_Init:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    236            Init_Chip7290(); 
   \   00000004   0x.... 0x....      BL       Init_Chip7290
    237            IntKeyPad_Init();
   \   00000008   0x.... 0x....      BL       IntKeyPad_Init
    238            ptrKeyPadFunc = func;
   \   0000000C   0x....             LDR.N    R0,??DataTable9_8
   \   0000000E   0x6004             STR      R4,[R0, #+0]
    239            EN_KeyInt();
   \   00000010   0x....             LDR.N    R0,??DataTable9_5  ;; 0x4004a04c
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0xF450 0x2020      ORRS     R0,R0,#0xA0000
   \   00000018   0x....             LDR.N    R1,??DataTable9_5  ;; 0x4004a04c
   \   0000001A   0x6008             STR      R0,[R1, #+0]
    240          } 
   \   0000001C   0xBD10             POP      {R4,PC}          ;; return
    241          
    242          /******************************************************************************
    243          * º¯ÊýÃû³Æ: Readkey_7290
    244          * º¯Êý¹¦ÄÜ: ¶ÁÈ¡°´¼üÖµ.
    245          * ·µ»Ø²ÎÊý: °´¼ü¼üÖµ
    246          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    247          static INT8U Readkey_7290()
    248          {
   \                     Readkey_7290:
   \   00000000   0xB510             PUSH     {R4,LR}
    249              INT8U key;
    250          
    251              StartI2C_7290();
   \   00000002   0x.... 0x....      BL       StartI2C_7290
    252              WriteByteI2C_7290(SLVADDR_7290);    /* Ð´´Ó»úµØÖ·       */
   \   00000006   0x2070             MOVS     R0,#+112
   \   00000008   0x.... 0x....      BL       WriteByteI2C_7290
    253              WackI2C_7290();
   \   0000000C   0x.... 0x....      BL       WackI2C_7290
    254          
    255              WriteByteI2C_7290(SUB_KEY_7290);    /* Ð´¶ÁÈ¡»º³åÇøµØÖ· */
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0x.... 0x....      BL       WriteByteI2C_7290
    256              WackI2C_7290();
   \   00000016   0x.... 0x....      BL       WackI2C_7290
    257          
    258              StartI2C_7290();
   \   0000001A   0x.... 0x....      BL       StartI2C_7290
    259              WriteByteI2C_7290(SLVADDR_7290+0x01);
   \   0000001E   0x2071             MOVS     R0,#+113
   \   00000020   0x.... 0x....      BL       WriteByteI2C_7290
    260              WackI2C_7290();
   \   00000024   0x.... 0x....      BL       WackI2C_7290
    261          
    262              key = ReadByteI2C_7290();
   \   00000028   0x.... 0x....      BL       ReadByteI2C_7290
   \   0000002C   0x0004             MOVS     R4,R0
    263          
    264              StopI2C_7290();
   \   0000002E   0x.... 0x....      BL       StopI2C_7290
    265              LongDelay_7290();
   \   00000032   0x.... 0x....      BL       LongDelay_7290
    266          
    267              return key;
   \   00000036   0x0020             MOVS     R0,R4
   \   00000038   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003A   0xBD10             POP      {R4,PC}          ;; return
    268          }
    269          /******************************************************************************
    270          * º¯ÊýÃû³Æ: ReadRepeat_7290
    271          * º¯Êý¹¦ÄÜ: ¶ÁÈ¡Á¬»÷´ÎÊý.
    272          * ·µ»Ø²ÎÊý: Á¬»÷´ÎÊý
    273          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    274          static INT8U ReadRepeat_7290()
    275          {
   \                     ReadRepeat_7290:
   \   00000000   0xB510             PUSH     {R4,LR}
    276              INT8U cnt;
    277          
    278              StartI2C_7290();
   \   00000002   0x.... 0x....      BL       StartI2C_7290
    279              WriteByteI2C_7290(SLVADDR_7290);    /* Ð´´Ó»úµØÖ·       */
   \   00000006   0x2070             MOVS     R0,#+112
   \   00000008   0x.... 0x....      BL       WriteByteI2C_7290
    280              WackI2C_7290();
   \   0000000C   0x.... 0x....      BL       WackI2C_7290
    281          
    282              WriteByteI2C_7290(REPEAT_CNT_7290);    /* Ð´¶ÁÈ¡»º³åÇøµØÖ· */
   \   00000010   0x2002             MOVS     R0,#+2
   \   00000012   0x.... 0x....      BL       WriteByteI2C_7290
    283              WackI2C_7290();
   \   00000016   0x.... 0x....      BL       WackI2C_7290
    284          
    285              StartI2C_7290();
   \   0000001A   0x.... 0x....      BL       StartI2C_7290
    286              WriteByteI2C_7290(SLVADDR_7290+0x01);
   \   0000001E   0x2071             MOVS     R0,#+113
   \   00000020   0x.... 0x....      BL       WriteByteI2C_7290
    287              WackI2C_7290();
   \   00000024   0x.... 0x....      BL       WackI2C_7290
    288          
    289              cnt = ReadByteI2C_7290();
   \   00000028   0x.... 0x....      BL       ReadByteI2C_7290
   \   0000002C   0x0004             MOVS     R4,R0
    290              StopI2C_7290();
   \   0000002E   0x.... 0x....      BL       StopI2C_7290
    291              LongDelay_7290();
   \   00000032   0x.... 0x....      BL       LongDelay_7290
    292          
    293              return cnt;
   \   00000036   0x0020             MOVS     R0,R4
   \   00000038   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003A   0xBD10             POP      {R4,PC}          ;; return
    294          }
    295          
    296          /*
    297          º¯Êý£ºZLG7290_ReadKeyValue()
    298          ¹¦ÄÜ£ºÖ±½Ó¶ÁÈ¡¼üÖµºÍÁ¬»÷´ÎÊý
    299          ·µ»Ø£º¼üÖµ£¬ÊýÖµ¼ü·µ»ØÊýÖµÁ¿£¬¹¦ÄÜ¼ü·µ»Ø¡®N¡¯,¡®Y¡¯,F1-¡®1¡¯,F2-¡®2¡¯,F3-¡®3¡¯,F4-¡®4¡¯
    300           */

   \                                 In section .text, align 2, keep-with-next
    301          INT16U ZLG7290_ReadKeyValue() 
    302          {
   \                     ZLG7290_ReadKeyValue:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    303              INT8U KeyValue = 0;
   \   00000002   0x2400             MOVS     R4,#+0
    304              INT8U KeyRepeat = 0;
   \   00000004   0x2500             MOVS     R5,#+0
    305              INT16U temp = 0;
   \   00000006   0x2600             MOVS     R6,#+0
    306              KeyValue=Readkey_7290();
   \   00000008   0x.... 0x....      BL       Readkey_7290
   \   0000000C   0x0004             MOVS     R4,R0
    307              KeyRepeat=ReadRepeat_7290();    
   \   0000000E   0x.... 0x....      BL       ReadRepeat_7290
   \   00000012   0x0005             MOVS     R5,R0
    308              switch (KeyValue) {
   \   00000014   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000016   0x2C01             CMP      R4,#+1
   \   00000018   0xD037             BEQ.N    ??ZLG7290_ReadKeyValue_0
   \   0000001A   0x2C02             CMP      R4,#+2
   \   0000001C   0xD037             BEQ.N    ??ZLG7290_ReadKeyValue_1
   \   0000001E   0x2C03             CMP      R4,#+3
   \   00000020   0xD037             BEQ.N    ??ZLG7290_ReadKeyValue_2
   \   00000022   0x2C04             CMP      R4,#+4
   \   00000024   0xD03D             BEQ.N    ??ZLG7290_ReadKeyValue_3
   \   00000026   0x2C09             CMP      R4,#+9
   \   00000028   0xD016             BEQ.N    ??ZLG7290_ReadKeyValue_4
   \   0000002A   0x2C0A             CMP      R4,#+10
   \   0000002C   0xD01D             BEQ.N    ??ZLG7290_ReadKeyValue_5
   \   0000002E   0x2C0B             CMP      R4,#+11
   \   00000030   0xD01D             BEQ.N    ??ZLG7290_ReadKeyValue_6
   \   00000032   0x2C0C             CMP      R4,#+12
   \   00000034   0xD02F             BEQ.N    ??ZLG7290_ReadKeyValue_7
   \   00000036   0x2C11             CMP      R4,#+17
   \   00000038   0xD021             BEQ.N    ??ZLG7290_ReadKeyValue_8
   \   0000003A   0x2C12             CMP      R4,#+18
   \   0000003C   0xD021             BEQ.N    ??ZLG7290_ReadKeyValue_9
   \   0000003E   0x2C13             CMP      R4,#+19
   \   00000040   0xD021             BEQ.N    ??ZLG7290_ReadKeyValue_10
   \   00000042   0x2C14             CMP      R4,#+20
   \   00000044   0xD02B             BEQ.N    ??ZLG7290_ReadKeyValue_11
   \   00000046   0x2C19             CMP      R4,#+25
   \   00000048   0xD013             BEQ.N    ??ZLG7290_ReadKeyValue_12
   \   0000004A   0x2C1A             CMP      R4,#+26
   \   0000004C   0xD013             BEQ.N    ??ZLG7290_ReadKeyValue_13
   \   0000004E   0x2C1B             CMP      R4,#+27
   \   00000050   0xD013             BEQ.N    ??ZLG7290_ReadKeyValue_14
   \   00000052   0x2C1C             CMP      R4,#+28
   \   00000054   0xD021             BEQ.N    ??ZLG7290_ReadKeyValue_15
   \   00000056   0xE026             B.N      ??ZLG7290_ReadKeyValue_16
    309              case  0x09 :
    310                KeyValue = 1;  
   \                     ??ZLG7290_ReadKeyValue_4:
   \   00000058   0x2401             MOVS     R4,#+1
    311                break; 
    312              case  0x0A :
    313                KeyValue = 2;  
    314                break;       
    315              case  0x0B  :
    316                KeyValue = 3;  
    317                break; 
    318              case  0x19 :
    319                KeyValue = 4;  
    320                break; 
    321              case  0x1A :
    322                KeyValue = 5;  
    323                break; 
    324              case  0x1B :
    325                KeyValue = 6;  
    326                break;      
    327              case  0x11 :
    328                KeyValue = 7;  
    329                break; 
    330              case  0x12 :
    331                KeyValue = 8;  
    332                break; 
    333              case  0x13 :
    334                KeyValue = 9;  
    335                break; 
    336              case  0x01 :
    337                KeyValue = 'N';  
    338                break;       
    339              case  0x02 :
    340                KeyValue = 0;  
    341                break; 
    342              case  0x03 :    
    343                KeyValue = 'Y';  
    344                break; 
    345              case  0x0C :
    346                KeyValue = '-';  
    347                break; 
    348              case  0x1C :    
    349                KeyValue = '.';  
    350                break;  
    351              case  0x14 :
    352                KeyValue = 'U';  
    353                break; 
    354              case  0x04 :    
    355                KeyValue = 'D';  
    356                break;
    357              default:
    358                return 0; 
    359              }
    360              temp = KeyRepeat;
   \                     ??ZLG7290_ReadKeyValue_17:
   \   0000005A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000005C   0x002E             MOVS     R6,R5
    361              temp <<= 8;
   \   0000005E   0x0236             LSLS     R6,R6,#+8
    362              temp |= KeyValue;
   \   00000060   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000062   0x4326             ORRS     R6,R4,R6
    363              return temp;
   \   00000064   0x0030             MOVS     R0,R6
   \   00000066   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \                     ??ZLG7290_ReadKeyValue_18:
   \   00000068   0xBD70             POP      {R4-R6,PC}       ;; return
   \                     ??ZLG7290_ReadKeyValue_5:
   \   0000006A   0x2402             MOVS     R4,#+2
   \   0000006C   0xE7F5             B.N      ??ZLG7290_ReadKeyValue_17
   \                     ??ZLG7290_ReadKeyValue_6:
   \   0000006E   0x2403             MOVS     R4,#+3
   \   00000070   0xE7F3             B.N      ??ZLG7290_ReadKeyValue_17
   \                     ??ZLG7290_ReadKeyValue_12:
   \   00000072   0x2404             MOVS     R4,#+4
   \   00000074   0xE7F1             B.N      ??ZLG7290_ReadKeyValue_17
   \                     ??ZLG7290_ReadKeyValue_13:
   \   00000076   0x2405             MOVS     R4,#+5
   \   00000078   0xE7EF             B.N      ??ZLG7290_ReadKeyValue_17
   \                     ??ZLG7290_ReadKeyValue_14:
   \   0000007A   0x2406             MOVS     R4,#+6
   \   0000007C   0xE7ED             B.N      ??ZLG7290_ReadKeyValue_17
   \                     ??ZLG7290_ReadKeyValue_8:
   \   0000007E   0x2407             MOVS     R4,#+7
   \   00000080   0xE7EB             B.N      ??ZLG7290_ReadKeyValue_17
   \                     ??ZLG7290_ReadKeyValue_9:
   \   00000082   0x2408             MOVS     R4,#+8
   \   00000084   0xE7E9             B.N      ??ZLG7290_ReadKeyValue_17
   \                     ??ZLG7290_ReadKeyValue_10:
   \   00000086   0x2409             MOVS     R4,#+9
   \   00000088   0xE7E7             B.N      ??ZLG7290_ReadKeyValue_17
   \                     ??ZLG7290_ReadKeyValue_0:
   \   0000008A   0x244E             MOVS     R4,#+78
   \   0000008C   0xE7E5             B.N      ??ZLG7290_ReadKeyValue_17
   \                     ??ZLG7290_ReadKeyValue_1:
   \   0000008E   0x2400             MOVS     R4,#+0
   \   00000090   0xE7E3             B.N      ??ZLG7290_ReadKeyValue_17
   \                     ??ZLG7290_ReadKeyValue_2:
   \   00000092   0x2459             MOVS     R4,#+89
   \   00000094   0xE7E1             B.N      ??ZLG7290_ReadKeyValue_17
   \                     ??ZLG7290_ReadKeyValue_7:
   \   00000096   0x242D             MOVS     R4,#+45
   \   00000098   0xE7DF             B.N      ??ZLG7290_ReadKeyValue_17
   \                     ??ZLG7290_ReadKeyValue_15:
   \   0000009A   0x242E             MOVS     R4,#+46
   \   0000009C   0xE7DD             B.N      ??ZLG7290_ReadKeyValue_17
   \                     ??ZLG7290_ReadKeyValue_11:
   \   0000009E   0x2455             MOVS     R4,#+85
   \   000000A0   0xE7DB             B.N      ??ZLG7290_ReadKeyValue_17
   \                     ??ZLG7290_ReadKeyValue_3:
   \   000000A2   0x2444             MOVS     R4,#+68
   \   000000A4   0xE7D9             B.N      ??ZLG7290_ReadKeyValue_17
   \                     ??ZLG7290_ReadKeyValue_16:
   \   000000A6   0x2000             MOVS     R0,#+0
   \   000000A8   0xE7DE             B.N      ??ZLG7290_ReadKeyValue_18
    364          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x4005200C         DC32     0x4005200c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0x400FF054         DC32     0x400ff054

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \   00000000   0x400FF044         DC32     0x400ff044

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_3:
   \   00000000   0x400FF048         DC32     0x400ff048

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_4:
   \   00000000   0x400FF050         DC32     0x400ff050

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_5:
   \   00000000   0x4004A04C         DC32     0x4004a04c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_6:
   \   00000000   0x4004A05C         DC32     0x4004a05c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_7:
   \   00000000   0x4004A044         DC32     0x4004a044

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_8:
   \   00000000   0x........         DC32     ptrKeyPadFunc
    365          
    366          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  Init_Chip7290
              8 -> LongDelay_7290
              8 -> StartI2C_7290
              8 -> StopI2C_7290
              8 -> WackI2C_7290
              8 -> WriteByteI2C_7290
        8  IntKeyPad_Init
              8 -> EnableInt_Kinetis
        8  KeyPad_Init
              8 -> Init_Chip7290
              8 -> IntKeyPad_Init
        4  LongDelay_7290
       16  ReadByteI2C_7290
             16 -> ShortDelay_7290
        8  ReadRepeat_7290
              8 -> LongDelay_7290
              8 -> ReadByteI2C_7290
              8 -> StartI2C_7290
              8 -> StopI2C_7290
              8 -> WackI2C_7290
              8 -> WriteByteI2C_7290
        8  Readkey_7290
              8 -> LongDelay_7290
              8 -> ReadByteI2C_7290
              8 -> StartI2C_7290
              8 -> StopI2C_7290
              8 -> WackI2C_7290
              8 -> WriteByteI2C_7290
        4  ShortDelay_7290
        8  StartI2C_7290
              8 -> ShortDelay_7290
        8  StopI2C_7290
              8 -> ShortDelay_7290
        8  WackI2C_7290
              8 -> ShortDelay_7290
       16  WriteByteI2C_7290
             16 -> ShortDelay_7290
       16  ZLG7290_ReadKeyValue
             16 -> ReadRepeat_7290
             16 -> Readkey_7290


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable9
       4  ??DataTable9_1
       4  ??DataTable9_2
       4  ??DataTable9_3
       4  ??DataTable9_4
       4  ??DataTable9_5
       4  ??DataTable9_6
       4  ??DataTable9_7
       4  ??DataTable9_8
       2  ExtKeyValue
      62  Init_Chip7290
      18  IntKeyPad_Init
      30  KeyPad_Init
       1  KeyPad_Mask
       1  Key_Valid
       2  Key_Value
      84  LongDelay_7290
     218  ReadByteI2C_7290
      60  ReadRepeat_7290
      60  Readkey_7290
      78  ShortDelay_7290
     110  StartI2C_7290
     100  StopI2C_7290
     128  WackI2C_7290
     206  WriteByteI2C_7290
     170  ZLG7290_ReadKeyValue
       4  ptrKeyPadFunc

 
    10 bytes in section .bss
 1 360 bytes in section .text
 
 1 360 bytes of CODE memory
    10 bytes of DATA memory

Errors: none
Warnings: none
